image:
  # -- Set image registry.
  registry: "crzgwpweu01.azurecr.io"
  # -- Set image repository.
  repository: "zgw/camunda-bpm-platform"
  # -- Set image tag.
  tag: 
  # -- Set image fullImage. Can be used the set the complete url.
  fullImage: [] # use this from pipeline, includes registry, repo and tag
  # -- Set image pullPolicy.<br>
  # Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'<br>
  # ref: <a href="https://kubernetes.io/docs/user-guide/images/#pre-pulling-images">[link]</a>
  pullPolicy: IfNotPresent
  # -- Optionally specify an array of imagePullSecrets.<br>
  # Secrets must be manually created in the namespace.<br>
  # ref: <a href="https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/">[link]</a>
  pullSecrets: []
  pullPolicy: Always

# -- Specifies the application name (required to be set).
name: "camunda-bpm-platform"

# -- Specfies the required replicas.<br>
# Unset when using hpa.
replicaCount: 1

# -- Specifies the application resource kind.
appKind: Deployment

# -- Controls whether the pod may use the node network namespace.<br>
# ref: <a href="https://kubernetes.io/docs/concepts/security/pod-security-policy/#host-namespaces">[link]</a>
hostNetwork: false

# -- Controls whether the container automatically mounts the ServiceAccount's API credentials.<br>
# In the pod/v1 this defaults to true, so also in this helm chart. recommended: false.<br>
# ref: <a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#opt-out-of-api-credential-automounting">[link]</a>
automountServiceAccountToken: false

serviceAccount:
  # -- Specifies whether a service account should be created.
  create: false
  # -- Annotations to add to the service account.

# -- (object) Extra labels to add to Pod.
# @notationType -- yaml
podLabels:
  public-access: allow

# -- Optionally, change this to ClusterFirstWithHostNet in case you have 'hostNetwork: true'.<br>
# By default, while using host network, name resolution uses the host's DNS. If you wish nginx-controller 
# to keep resolving names inside the k8s network, use ClusterFirstWithHostNet.
dnsPolicy: ClusterFirst

podSecurityContext:
  enabled: true
  fsGroup: 1000
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true

containerSecurityContext:
  enabled: true
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

service:
  # -- Kubernetes service type and port number.
  type: ClusterIP
  # -- Specify the default service port and targetPort.<br>
  # Note: port or ports must be provided to enable service!<br>
  port: 8080
  targetPort: 8080
  # -- Provide any additional service annotations.<br>

# -- (object) Set up update strategy for installation. Set to Recreate if you use persistent volume that cannot be mounted by more than one pods to makesure the pods are destroyed first.
updateStrategy:
  type: RollingUpdate

ingress:
  # -- Configure the ingress resource that allows you to access the app installation.<br>
  # Set to true to enable ingress.<br>
  # ref: <a href="https://kubernetes.io/docs/user-guide/ingress/">[link]</a>
  enabled: true
  # -- Set this to true in order to add the corresponding annotations for cert-manager.
  certManager: false
  # -- Ingress Path type.
  pathType: Prefix
  # -- Override API Version (automatically detected if not set).
  apiVersion: ""
  # -- When the ingress is enabled, a host pointing to this will be created.
  hostname: ""
  # -- The Path for the ingress controller.
  path: /api*
  # -- Set the ingressclassname
  ingressClassName: ""
  # -- (object) Ingress annotations done as key:value pairs.<br>
  # @notationType -- yaml
  # For a full list of possible ingress annotations, please see:<br>
  # If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set.<br>
  # ref: <a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md">[link]</a>
  annotations:
    kubernetes.io/ingress.class: 'azure/application-gateway-int'
    appgw.ingress.kubernetes.io/ssl-redirect: 'true'
    appgw.ingress.kubernetes.io/health-probe-status-codes: "403"
  # -- Enable TLS configuration for the hostname defined at ingress.hostname parameter.<br>
  # TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}.<br>
  # You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it.
  tls: true
  # -- Specify a tls secret which already exists. tls must be set to true.
  existingTlsSecret: ""
  # -- (list) The list of additional hostnames to be covered with this ingress record.
  # @notationType -- yaml
  # @raw
  # Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array.
  #
  # <details>
  # <summary>+Expand</summary>
  #
  # ```yaml
  # extraHosts:
  # - name: app.local
  #   path: /
  # ```
  # </details>
  extraHosts: []
  # -- (list) Any additional arbitrary paths that may need to be added to the ingress under the main host.
  # @notationType -- yaml
  # @raw
  # For example: The ALB ingress controller requires a special rule for handling SSL redirection.
  #
  # <details>
  # <summary>+Expand</summary>
  #
  # ```yaml
  # extraPaths:
  # - path: /api/*
  #   pathType: Prefix
  #   backend:    
  #     service:
  #       name: '{{ include "common.names.fullname" . }}'
  #       port:
  #         name: app
  # ```
  # </details>
  extraPaths: []
  # -- (list) The tls configuration for additional hostnames to be covered with this ingress record.
  # @notationType -- yaml
  # @raw
  #
  # <details>
  # <summary>+Expand</summary>
  #
  # ```yaml
  # extraTls:
  # - hosts:
  #     - app.local
  #   secretName: app.local-tls
  # ```
  # </details>
  # ref: <a href="https://kubernetes.io/docs/concepts/services-networking/ingress/#tls">[link]</a>
  extraTls: []
  # -- (object) Adds location and server snippets annotations for ingress-nginx.
  # @notationType -- yaml
  # @raw
  #
  # <details>
  # <summary>+Expand</summary>
  #
  # ```yaml
  # nginx:
  #   serverSnippet: |
  #     ## Redirect mobile
  #     set $agentflag 0;
  #     if ($http_user_agent ~* "(Mobile)" ){
  #       set $agentflag 1;
  #     }
  #     if ( $agentflag = 1 ) {
  #       return 301 https://m.example.com;
  #     }
  # ```
  # </details>
  # ref: <a href ="https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#configuration-snippet">[link]</a><br>
  # ref: <a href ="https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#server-snippet">[link]</a>
  nginx:
    configurationSnippet:
    serverSnippet:

extraIngress:
  # -- Configure a second ingress resource that allows you to access the app installation.<br>
  # Set to true to enable ingress.<br>
  # ref: <a href="https://kubernetes.io/docs/user-guide/ingress/">[link]</a>
  enabled: false

resources:
  limits:
    cpu: 2
    memory: 3Gi
  requests:
    cpu: 500m
    memory: 3Gi

autoscaling:
  enabled: false

# -- Pod anti-affinity preset.<br>
# Allowed values: soft, hard.<br>
# ref: <a href="https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity">[link]</a>
podAntiAffinityPreset: soft

nodeAffinityPreset:
  ## Node affinity type
  ## Allowed values: soft, hard
  ##
  type: ""
  ## Node label key to match
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## Node label values to match
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []

# -- Affinity for pod assignment.<br>
# Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set.<br>
# ref: <a href="https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity">[link]</a>
affinity: {}

volumes:
  - name: tmpfs-1
    emptyDir: {}
# -- (list) Array to add volume mounts (normally used with volumes).
# @notationType -- yaml
# @raw
#
# <details>
# <summary>+Expand</summary>
#
# ```yaml
# - mountPath: /parentdir/subdir
#   name: storage
#   subPath: dirUnderMountPath/subdir
# ```
# </details>
# ref: <a href="https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes-2">[link]</a>
volumeMounts:
  - mountPath: /tmp
    name: tmpfs-1

extraVolumes: []
# -- (list) Array to add extra volume mounts (normally used with volumes).
# @notationType -- yaml
# @raw
#
# <details>
# <summary>+Expand</summary>
#
# ```yaml
# extraVolumeMounts:
#   - mountPath: /tmp
#     name: tmpfs-2
# ```
# </details>
# ref: <a href="https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes-2">[link]</a>
extraVolumeMounts: []

persistence:
  # -- Enable persistence using Persistent Volume Claims.<br>
  # ref: <a href="https://kubernetes.io/docs/user-guide/persistent-volumes/">[link]</a>
  enabled: false
  # -- Set accessMode for pvc.
  accessMode: ReadWriteMany
  # -- Set size for pvc.
  size: 1Gi
  # -- Set mountPath for pvc.
  mountPath: /data

livenessProbe:
  # -- Configure options for liveness probes.<br>
  # ref: <a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes">[link]</a>
  enabled: true
  httpGet:
    path: /api/v1/ping
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 2
  successThreshold: 1
readinessProbe:
  # -- Configure options for readiness probes.<br>
  # ref: <a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes">[link]</a>
  enabled: true
  httpGet:
    path: /api/v1/ping
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 20
  successThreshold: 1
startupProbe:
  # -- Configure options for startup probe.<br>
  # ref: <a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes">[link]</a>
  enabled: false
  httpGet:
    path: /api/v1/ping
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 20
  successThreshold: 1

# -- (object) PodDisruptionBudget configuration.
# @notationType -- yaml
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

tests:
  httpChecks:
    default: false